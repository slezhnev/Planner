import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 * Редактирование параметров работы в плане
 */
public class WorkParamForm extends JDialog implements ActionListener, ItemListener {
    private JPanel panel1;
    private JTextArea nameWorkEdit;
    private JFormattedTextField finishDateEdit;
    private JButton saveBtn;
    private JButton cancelBtn;
    private JTextArea resultsEdit;
    private JTextArea finishResultsEdit;
    private JTextArea reserveEdit;
    private JCheckBox makedCheckBox;
    private JComboBox workTypeCB;
    private JFormattedTextField makerPercentEdit;
    //
    private static WorkInPlan res = null;
    private static WorkParamForm dialog;

    public static WorkInPlan showDialog(Component frameComp,
                                        Component locationComp,
                                        WorkInPlan workToEdit) {
        Frame frame = JOptionPane.getFrameForComponent(frameComp);
        dialog = new WorkParamForm(frame, locationComp, workToEdit);
        dialog.setVisible(true);
        return res;
    }

    private WorkParamForm(Frame frame,
                          Component locationComp,
                          WorkInPlan workToEdit) {
        super(frame, "Параметры работы", true);
        //
        res = null;
        // Кнопки
        cancelBtn.addActionListener(this);
        saveBtn.addActionListener(this);
        //
        nameWorkEdit.setText(workToEdit.getName());
        resultsEdit.setText(workToEdit.getDesc());
        finishDateEdit.setText(workToEdit.getEndDate());
        // Trying to fire itemStateChange listener
        makedCheckBox.setSelected(workToEdit.isMaked());
        if (workToEdit.isMaked()) {
            itemStateChanged(new ItemEvent(makedCheckBox, ItemEvent.ITEM_STATE_CHANGED, makedCheckBox, ItemEvent.SELECTED));
        } else {
            itemStateChanged(new ItemEvent(makedCheckBox, ItemEvent.ITEM_STATE_CHANGED, makedCheckBox, ItemEvent.DESELECTED));
        }
        makerPercentEdit.setValue(workToEdit.getMakedPercent());
        //
        finishResultsEdit.setText(workToEdit.getFinishDoc());
        reserveEdit.setText(workToEdit.getReserve());
        //
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
        for (PlanUtils.WorkTypes type : PlanUtils.WorkTypes.values()) {
            cbModel.addElement(type);
        }
        workTypeCB.setModel(cbModel);
        //
        workTypeCB.setSelectedItem(workToEdit.getWorkType());
        getContentPane().add(panel1);
        setBounds(0, 0, 900, 800);
        //setLocationRelativeTo(locationComp);
        setLocationRelativeTo(null);
        makedCheckBox.addItemListener(this);
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("Сохранить")) {
            res = new WorkInPlan(nameWorkEdit.getText(), resultsEdit.getText(), finishDateEdit.getText(),
                    reserveEdit.getText(), finishResultsEdit.getText(), (PlanUtils.WorkTypes) workTypeCB.getSelectedItem());
            res.setMaked(makedCheckBox.isSelected());
            res.setMakedPercent((Double) makerPercentEdit.getValue());
        }
        dialog.setVisible(false);
    }

    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == ItemEvent.DESELECTED) {
            makerPercentEdit.setEnabled(true);
        } else if (e.getStateChange() == ItemEvent.SELECTED) {
            makerPercentEdit.setEnabled(false);
            makerPercentEdit.setValue(100.0);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel1.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 1, false));
        final JLabel label1 = new JLabel();
        label1.setText("Наименование работы:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Представляемые результаты:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Срок завершения:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label3, gbc);
        finishDateEdit = new JFormattedTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(finishDateEdit, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(panel3, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel3.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 150), null, 0, false));
        resultsEdit = new JTextArea();
        resultsEdit.setLineWrap(true);
        resultsEdit.setText("1 \\n 2 \\n 3");
        resultsEdit.setWrapStyleWord(true);
        scrollPane1.setViewportView(resultsEdit);
        final JLabel label4 = new JLabel();
        label4.setText("Отметка о выполнении:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label4, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(panel4, gbc);
        final JScrollPane scrollPane2 = new JScrollPane();
        panel4.add(scrollPane2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        finishResultsEdit = new JTextArea();
        finishResultsEdit.setLineWrap(true);
        finishResultsEdit.setWrapStyleWord(false);
        scrollPane2.setViewportView(finishResultsEdit);
        final JLabel label5 = new JLabel();
        label5.setText("Наличие задела:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label5, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(panel5, gbc);
        final JScrollPane scrollPane3 = new JScrollPane();
        panel5.add(scrollPane3, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        reserveEdit = new JTextArea();
        reserveEdit.setLineWrap(true);
        reserveEdit.setWrapStyleWord(true);
        scrollPane3.setViewportView(reserveEdit);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(panel6, gbc);
        final JScrollPane scrollPane4 = new JScrollPane();
        panel6.add(scrollPane4, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        nameWorkEdit = new JTextArea();
        scrollPane4.setViewportView(nameWorkEdit);
        final JLabel label6 = new JLabel();
        label6.setText("Выполнено:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Вид работы:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label7, gbc);
        workTypeCB = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(workTypeCB, gbc);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new BorderLayout(0, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(panel7, gbc);
        makedCheckBox = new JCheckBox();
        makedCheckBox.setText("");
        panel7.add(makedCheckBox, BorderLayout.WEST);
        makerPercentEdit = new JFormattedTextField();
        makerPercentEdit.setEnabled(false);
        panel7.add(makerPercentEdit, BorderLayout.CENTER);
        final JLabel label8 = new JLabel();
        label8.setText(" % ");
        panel7.add(label8, BorderLayout.EAST);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel8, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(25, -1), null, 0, false));
        saveBtn = new JButton();
        saveBtn.setText("Сохранить");
        panel8.add(saveBtn, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelBtn = new JButton();
        cancelBtn.setText("Отмена");
        panel8.add(cancelBtn, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
